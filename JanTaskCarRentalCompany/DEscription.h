#ifndef DESCRIPTION_H
#define DESCRIPTION_H

#endif // DESCRIPTION_H

// Consider a software program for a car rental company. Create classes for Car, RentalAgency, and Customer.

// 1. Create a Car class with attributes such as make, model, year, and rental price per day.

// 2. Create a RentalAgency class with attributes such as name and location.

// 3. Create a Customer class with attributes such as name, phone number, and age.

// 4. Implement an association between RentalAgency and Customer classes,
// where a customer can rent a car from a specific rental agency.

// 5. Implement aggregation between RentalAgency and Car classes,
// where a rental agency can have multiple cars available for rental.

// 6. Implement composition between Customer and RentalAgency classes,
// where a customer is associated with a specific rental agency for renting a car.

// 7. Create methods to rent a car, return a rented car, display details of a rented car,
// display all available cars at a rental agency, etc.

// 8. Implement a method in the RentalAgency class to calculate
// the total revenue generated by all rented cars in a given month.

// 9. Create a method in the Customer class to display the rental history of a specific customer,
// showing details of all cars they have rented in the past.

// 10. Implement a method in the Car class to check if a particular car is currently
// available for rental or if it has already been rented out.

// 11. Add a feature to the RentalAgency class to track the popularity of each car model,
// counting how many times each model has been rented out.

// 12. RentalTransaction class: This class can represent a rental transaction
//between a customer and the rental agency. It can store information such as the
// rental duration, cost, and any additional services selected by the customer.

// 13. VehicleInventory class: This class can keep track of the available cars in the rental agency's fleet.
// It can store information about each vehicle, such as the make, model, year, and availability status.

// 14. RentalLocation class: This class can represent different rental agency locations where customers can rent cars.
//It can store information about each location, such as the address, contact details, and operating hours.

// 15. RentalPromotion class: This class can store information about any ongoing promotions or
// discounts offered by the rental agency to attract customers. It can include details such as the promotion name,
//discount amount, and validity period.

// 16. CustomerFeedback class: This class can store feedback and reviews provided by
// customers after their rental experience. It can include ratings and comments on the service,
// staff, and overall satisfaction with the rental agency.

